parameters:
    netgen_content_browser.controller.base.class: Netgen\Bundle\ContentBrowserBundle\Controller\API\Controller
    netgen_content_browser.controller.api.config.class: Netgen\Bundle\ContentBrowserBundle\Controller\API\ConfigController
    netgen_content_browser.controller.api.browse.class: Netgen\Bundle\ContentBrowserBundle\Controller\API\BrowseController
    netgen_content_browser.controller.api.search.class: Netgen\Bundle\ContentBrowserBundle\Controller\API\SearchController

    netgen_content_browser.item_builder.class: Netgen\Bundle\ContentBrowserBundle\Item\Builder\Builder

    netgen_content_browser.event_listener.set_is_api_request.class: Netgen\Bundle\ContentBrowserBundle\EventListener\SetIsApiRequestListener
    netgen_content_browser.event_listener.set_current_config.class: Netgen\Bundle\ContentBrowserBundle\EventListener\SetCurrentConfigListener
    netgen_content_browser.event_listener.exception_conversion.class: Netgen\Bundle\ContentBrowserBundle\EventListener\ExceptionConversionListener
    netgen_content_browser.event_listener.exception_serializer.class: Netgen\Bundle\ContentBrowserBundle\EventListener\ExceptionSerializerListener

    netgen_content_browser.config_loader.chained.class: Netgen\Bundle\ContentBrowserBundle\Config\ChainedConfigLoader
    netgen_content_browser.config_loader.default.class: Netgen\Bundle\ContentBrowserBundle\Config\DefaultConfigLoader

services:
    # Virtual services

    netgen_content_browser.current_converter:
        synthetic: true

    netgen_content_browser.current_backend:
        synthetic: true

    netgen_content_browser.current_config:
        synthetic: true

    # API controllers

    netgen_content_browser.controller.base:
        class: "%netgen_content_browser.controller.base.class%"
        arguments:
            - "@netgen_content_browser.current_backend"
            - "@netgen_content_browser.item_builder"
            - "@netgen_content_browser.current_config"
        calls:
            - [setContainer, ["@service_container"]]

    netgen_content_browser.controller.api.config:
        class: "%netgen_content_browser.controller.api.config.class%"
        parent: netgen_content_browser.controller.base

    netgen_content_browser.controller.api.browse:
        class: "%netgen_content_browser.controller.api.browse.class%"
        parent: netgen_content_browser.controller.base

    netgen_content_browser.controller.api.search:
        class: "%netgen_content_browser.controller.api.search.class%"
        parent: netgen_content_browser.controller.base

    # Builder

    netgen_content_browser.item_builder:
        class: "%netgen_content_browser.item_builder.class%"
        arguments:
            - "@netgen_content_browser.current_converter"
            - "@netgen_content_browser.current_backend"
            - "@twig"
            - "@netgen_content_browser.current_config"

    # Event listeners

    netgen_content_browser.event_listener.set_is_api_request:
        class: "%netgen_content_browser.event_listener.set_is_api_request.class%"
        tags:
            - { name: kernel.event_subscriber }

    netgen_content_browser.event_listener.set_current_config:
        class: "%netgen_content_browser.event_listener.set_current_config.class%"
        arguments:
            - "@netgen_content_browser.config_loader"
        calls:
            - [setContainer, ["@service_container"]]
        tags:
            - { name: kernel.event_subscriber }

    netgen_content_browser.event_listener.exception_conversion:
        class: "%netgen_content_browser.event_listener.exception_conversion.class%"
        tags:
            - { name: kernel.event_subscriber }

    netgen_content_browser.event_listener.exception_serializer:
        class: "%netgen_content_browser.event_listener.exception_serializer.class%"
        calls:
            - [setOutputDebugInfo, ["%kernel.debug%"]]
        tags:
            - { name: kernel.event_subscriber }

    # Config loaders

    netgen_content_browser.config_loader:
        alias: netgen_content_browser.config_loader.chained

    netgen_content_browser.config_loader.default:
        class: "%netgen_content_browser.config_loader.default.class%"
        calls:
            - [setContainer, ["@service_container"]]

    netgen_content_browser.config_loader.chained:
        class: "%netgen_content_browser.config_loader.chained.class%"
        arguments:
            - "@netgen_content_browser.config_loader.default"
